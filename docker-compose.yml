version: '3.4'

services:
  api:
    image: ${DOCKER_REGISTRY-}api
    container_name: api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    ports:      
      - "5001:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    build:
      context: .
      dockerfile: src/Api/Dockerfile
    depends_on:
      database:
        condition: service_healthy
    restart: always

  database:
    image: postgres:latest
    container_name: database
    environment:
      - POSTGRES_DB=techchallenge
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/techchallenge-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      
